{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_verifyingSigner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "uint48",
          "name": "validUntil",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "validAfter",
          "type": "uint48"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "paymasterAndData",
          "type": "bytes"
        }
      ],
      "name": "parsePaymasterAndData",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "validUntil",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "validAfter",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyingSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b5060405161132038038061132083398101604081905261002f916100b9565b8161003933610051565b6001600160a01b039081166080521660a052506100f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100b657600080fd5b50565b600080604083850312156100cc57600080fd5b82516100d7816100a1565b60208401519092506100e8816100a1565b809150509250929050565b60805160a0516111d0610150600039600081816101340152610a950152600081816102360152818161031a015281816103b101528181610566015281816105fa01528181610671015281816106fe01526108a201526111d06000f3fe6080604052600436106100e85760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec881461028d578063d0e30db0146102a2578063f2fde38b146102aa578063f465c77e146102ca57600080fd5b8063a9a2340914610204578063b0d691fe14610224578063bb9fe6bf14610258578063c23a5cea1461026d57600080fd5b8063715018a6116100c6578063715018a6146101735780638da5cb5b1461018857806394d4ad60146101a657806394e1fc19146101d657600080fd5b80630396cb60146100ed578063205c28781461010257806323d9ac9b14610122575b600080fd5b6101006100fb366004610dc7565b6102f8565b005b34801561010e57600080fd5b5061010061011d366004610e09565b610383565b34801561012e57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017f57600080fd5b506101006103f5565b34801561019457600080fd5b506000546001600160a01b0316610156565b3480156101b257600080fd5b506101c66101c1366004610e77565b610409565b60405161016a9493929190610eb9565b3480156101e257600080fd5b506101f66101f1366004610f39565b610446565b60405190815260200161016a565b34801561021057600080fd5b5061010061021f366004610f97565b610542565b34801561023057600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b34801561026457600080fd5b5061010061055c565b34801561027957600080fd5b50610100610288366004610ff7565b6105d3565b34801561029957600080fd5b506101f6610659565b6101006106e9565b3480156102b657600080fd5b506101006102c5366004610ff7565b61074b565b3480156102d657600080fd5b506102ea6102e5366004611014565b6107c9565b60405161016a929190611062565b6103006107ed565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b505050505050565b61038b6107ed565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561036757600080fd5b6103fd6107ed565b6104076000610847565b565b600080368161041c6054601487896110b7565b81019061042991906110e1565b909450925061043b85605481896110b7565b949793965094505050565b6000833580602086013561045d6040880188611114565b60405161046b92919061115b565b6040519081900390206104816060890189611114565b60405161048f92919061115b565b604080519182900382206001600160a01b03909516602083015281019290925260608201526080808201929092529086013560a08083019190915286013560c08083019190915286013560e08083019190915286013561010080830191909152860135610120820152466101408201523061016082015265ffffffffffff80861661018083015284166101a08201526101c001604051602081830303815290604052805190602001209150509392505050565b61054a610897565b61055684848484610907565b50505050565b6105646107ed565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105bf57600080fd5b505af1158015610556573d6000803e3d6000fd5b6105db6107ed565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561063e57600080fd5b505af1158015610652573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e4919061116b565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561063e57600080fd5b6107536107ed565b6001600160a01b0381166107bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6107c681610847565b50565b606060006107d5610897565b6107e085858561093f565b915091505b935093915050565b6000546001600160a01b031633146104075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104075760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b60448201526064016107b4565b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b60448201526064016107b4565b60606000808036816109586101c16101208b018b611114565b9296509094509250905060408114806109715750604181145b6109e5576040805162461bcd60e51b81526020600482015260248101919091527f566572696679696e675061796d61737465723a20696e76616c6964207369676e60448201527f6174757265206c656e67746820696e207061796d6173746572416e644461746160648201526084016107b4565b6000610a486109f58b8787610446565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610a8a8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b1892505050565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610aed57610ace60018686610b3c565b60405180602001604052806000815250909650965050505050506107e5565b610af960008686610b3c565b6040805160208101909152600081529b909a5098505050505050505050565b6000806000610b278585610b74565b91509150610b3481610bb9565b509392505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610b64576000610b67565b60015b60ff161717949350505050565b6000808251604103610baa5760208301516040840151606085015160001a610b9e87828585610d03565b94509450505050610bb2565b506000905060025b9250929050565b6000816004811115610bcd57610bcd611184565b03610bd55750565b6001816004811115610be957610be9611184565b03610c365760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107b4565b6002816004811115610c4a57610c4a611184565b03610c975760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107b4565b6003816004811115610cab57610cab611184565b036107c65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107b4565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d3a5750600090506003610dbe565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d8e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610db757600060019250925050610dbe565b9150600090505b94509492505050565b600060208284031215610dd957600080fd5b813563ffffffff81168114610ded57600080fd5b9392505050565b6001600160a01b03811681146107c657600080fd5b60008060408385031215610e1c57600080fd5b8235610e2781610df4565b946020939093013593505050565b60008083601f840112610e4757600080fd5b50813567ffffffffffffffff811115610e5f57600080fd5b602083019150836020828501011115610bb257600080fd5b60008060208385031215610e8a57600080fd5b823567ffffffffffffffff811115610ea157600080fd5b610ead85828601610e35565b90969095509350505050565b600065ffffffffffff808716835280861660208401525060606040830152826060830152828460808401376000608084840101526080601f19601f850116830101905095945050505050565b60006101608284031215610f1857600080fd5b50919050565b803565ffffffffffff81168114610f3457600080fd5b919050565b600080600060608486031215610f4e57600080fd5b833567ffffffffffffffff811115610f6557600080fd5b610f7186828701610f05565b935050610f8060208501610f1e565b9150610f8e60408501610f1e565b90509250925092565b60008060008060608587031215610fad57600080fd5b843560038110610fbc57600080fd5b9350602085013567ffffffffffffffff811115610fd857600080fd5b610fe487828801610e35565b9598909750949560400135949350505050565b60006020828403121561100957600080fd5b8135610ded81610df4565b60008060006060848603121561102957600080fd5b833567ffffffffffffffff81111561104057600080fd5b61104c86828701610f05565b9660208601359650604090950135949350505050565b604081526000835180604084015260005b818110156110905760208187018101516060868401015201611073565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600080858511156110c757600080fd5b838611156110d457600080fd5b5050820193919092039150565b600080604083850312156110f457600080fd5b6110fd83610f1e565b915061110b60208401610f1e565b90509250929050565b6000808335601e1984360301811261112b57600080fd5b83018035915067ffffffffffffffff82111561114657600080fd5b602001915036819003821315610bb257600080fd5b8183823760009101908152919050565b60006020828403121561117d57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122025f366c172a09a80b3417be627d850f3d6654d2dc3077409d57420af712b3e1d64736f6c63430008110033",
    "sourceMap": "779:3621:20:-:0;;;1066:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1143:11;936:32:43;719:10:61;936:18:43;:32::i;:::-;-1:-1:-1;;;;;563:24:1;;;;;1166:34:20::1;;::::0;-1:-1:-1;779:3621:20;;2433:187:43;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:43;;;-1:-1:-1;;;;;;2541:17:43;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:144:76:-;-1:-1:-1;;;;;102:31:76;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:431::-;262:6;270;323:2;311:9;302:7;298:23;294:32;291:52;;;339:1;336;329:12;291:52;371:9;365:16;390:44;428:5;390:44;:::i;:::-;503:2;488:18;;482:25;453:5;;-1:-1:-1;516:46:76;482:25;516:46;:::i;:::-;581:7;571:17;;;163:431;;;;;:::o;:::-;779:3621:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100e85760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec881461028d578063d0e30db0146102a2578063f2fde38b146102aa578063f465c77e146102ca57600080fd5b8063a9a2340914610204578063b0d691fe14610224578063bb9fe6bf14610258578063c23a5cea1461026d57600080fd5b8063715018a6116100c6578063715018a6146101735780638da5cb5b1461018857806394d4ad60146101a657806394e1fc19146101d657600080fd5b80630396cb60146100ed578063205c28781461010257806323d9ac9b14610122575b600080fd5b6101006100fb366004610dc7565b6102f8565b005b34801561010e57600080fd5b5061010061011d366004610e09565b610383565b34801561012e57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017f57600080fd5b506101006103f5565b34801561019457600080fd5b506000546001600160a01b0316610156565b3480156101b257600080fd5b506101c66101c1366004610e77565b610409565b60405161016a9493929190610eb9565b3480156101e257600080fd5b506101f66101f1366004610f39565b610446565b60405190815260200161016a565b34801561021057600080fd5b5061010061021f366004610f97565b610542565b34801561023057600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b34801561026457600080fd5b5061010061055c565b34801561027957600080fd5b50610100610288366004610ff7565b6105d3565b34801561029957600080fd5b506101f6610659565b6101006106e9565b3480156102b657600080fd5b506101006102c5366004610ff7565b61074b565b3480156102d657600080fd5b506102ea6102e5366004611014565b6107c9565b60405161016a929190611062565b6103006107ed565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b505050505050565b61038b6107ed565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561036757600080fd5b6103fd6107ed565b6104076000610847565b565b600080368161041c6054601487896110b7565b81019061042991906110e1565b909450925061043b85605481896110b7565b949793965094505050565b6000833580602086013561045d6040880188611114565b60405161046b92919061115b565b6040519081900390206104816060890189611114565b60405161048f92919061115b565b604080519182900382206001600160a01b03909516602083015281019290925260608201526080808201929092529086013560a08083019190915286013560c08083019190915286013560e08083019190915286013561010080830191909152860135610120820152466101408201523061016082015265ffffffffffff80861661018083015284166101a08201526101c001604051602081830303815290604052805190602001209150509392505050565b61054a610897565b61055684848484610907565b50505050565b6105646107ed565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105bf57600080fd5b505af1158015610556573d6000803e3d6000fd5b6105db6107ed565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561063e57600080fd5b505af1158015610652573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e4919061116b565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561063e57600080fd5b6107536107ed565b6001600160a01b0381166107bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6107c681610847565b50565b606060006107d5610897565b6107e085858561093f565b915091505b935093915050565b6000546001600160a01b031633146104075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104075760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b60448201526064016107b4565b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b60448201526064016107b4565b60606000808036816109586101c16101208b018b611114565b9296509094509250905060408114806109715750604181145b6109e5576040805162461bcd60e51b81526020600482015260248101919091527f566572696679696e675061796d61737465723a20696e76616c6964207369676e60448201527f6174757265206c656e67746820696e207061796d6173746572416e644461746160648201526084016107b4565b6000610a486109f58b8787610446565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610a8a8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b1892505050565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610aed57610ace60018686610b3c565b60405180602001604052806000815250909650965050505050506107e5565b610af960008686610b3c565b6040805160208101909152600081529b909a5098505050505050505050565b6000806000610b278585610b74565b91509150610b3481610bb9565b509392505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610b64576000610b67565b60015b60ff161717949350505050565b6000808251604103610baa5760208301516040840151606085015160001a610b9e87828585610d03565b94509450505050610bb2565b506000905060025b9250929050565b6000816004811115610bcd57610bcd611184565b03610bd55750565b6001816004811115610be957610be9611184565b03610c365760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107b4565b6002816004811115610c4a57610c4a611184565b03610c975760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107b4565b6003816004811115610cab57610cab611184565b036107c65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107b4565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d3a5750600090506003610dbe565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d8e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610db757600060019250925050610dbe565b9150600090505b94509492505050565b600060208284031215610dd957600080fd5b813563ffffffff81168114610ded57600080fd5b9392505050565b6001600160a01b03811681146107c657600080fd5b60008060408385031215610e1c57600080fd5b8235610e2781610df4565b946020939093013593505050565b60008083601f840112610e4757600080fd5b50813567ffffffffffffffff811115610e5f57600080fd5b602083019150836020828501011115610bb257600080fd5b60008060208385031215610e8a57600080fd5b823567ffffffffffffffff811115610ea157600080fd5b610ead85828601610e35565b90969095509350505050565b600065ffffffffffff808716835280861660208401525060606040830152826060830152828460808401376000608084840101526080601f19601f850116830101905095945050505050565b60006101608284031215610f1857600080fd5b50919050565b803565ffffffffffff81168114610f3457600080fd5b919050565b600080600060608486031215610f4e57600080fd5b833567ffffffffffffffff811115610f6557600080fd5b610f7186828701610f05565b935050610f8060208501610f1e565b9150610f8e60408501610f1e565b90509250925092565b60008060008060608587031215610fad57600080fd5b843560038110610fbc57600080fd5b9350602085013567ffffffffffffffff811115610fd857600080fd5b610fe487828801610e35565b9598909750949560400135949350505050565b60006020828403121561100957600080fd5b8135610ded81610df4565b60008060006060848603121561102957600080fd5b833567ffffffffffffffff81111561104057600080fd5b61104c86828701610f05565b9660208601359650604090950135949350505050565b604081526000835180604084015260005b818110156110905760208187018101516060868401015201611073565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600080858511156110c757600080fd5b838611156110d457600080fd5b5050820193919092039150565b600080604083850312156110f457600080fd5b6110fd83610f1e565b915061110b60208401610f1e565b90509250929050565b6000808335601e1984360301811261112b57600080fd5b83018035915067ffffffffffffffff82111561114657600080fd5b602001915036819003821315610bb257600080fd5b8183823760009101908152919050565b60006020828403121561117d57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122025f366c172a09a80b3417be627d850f3d6654d2dc3077409d57420af712b3e1d64736f6c63430008110033",
    "sourceMap": "779:3621:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3575:140:1;;;;;;:::i;:::-;;:::i;:::-;;3179:171;;;;;;;;;;-1:-1:-1;3179:171:1;;;;;:::i;:::-;;:::i;907:40:20:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;939:32:76;;;921:51;;909:2;894:18;907:40:20;;;;;;;;1831:101:43;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:43;1273:6;-1:-1:-1;;;;;1273:6:43;1201:85;;4063:335:20;;;;;;;;;;-1:-1:-1;4063:335:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1622:876::-;;;;;;;;;;-1:-1:-1;1622:876:20;;;;;:::i;:::-;;:::i;:::-;;;3336:25:76;;;3324:2;3309:18;1622:876:20;3190:177:76;1416:216:1;;;;;;;;;;-1:-1:-1;1416:216:1;;;;;:::i;:::-;;:::i;470:39::-;;;;;;;;;;;;;;;4068:83;;;;;;;;;;;;;:::i;4372:133::-;;;;;;;;;;-1:-1:-1;4372:133:1;;;;;:::i;:::-;;:::i;3798:111::-;;;;;;;;;;;;;:::i;2910:104::-;;;:::i;2081:198:43:-;;;;;;;;;;-1:-1:-1;2081:198:43;;;;;:::i;:::-;;:::i;631:315:1:-;;;;;;;;;;-1:-1:-1;631:315:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3575:140::-;1094:13:43;:11;:13::i;:::-;3654:54:1::1;::::0;-1:-1:-1;;;3654:54:1;;6241:10:76;6229:23;;3654:54:1::1;::::0;::::1;6211:42:76::0;3654:10:1::1;-1:-1:-1::0;;;;;3654:19:1::1;::::0;::::1;::::0;3681:9:::1;::::0;6184:18:76;;3654:54:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3575:140:::0;:::o;3179:171::-;1094:13:43;:11;:13::i;:::-;3297:46:1::1;::::0;-1:-1:-1;;;3297:46:1;;-1:-1:-1;;;;;6472:32:76;;;3297:46:1::1;::::0;::::1;6454:51:76::0;6521:18;;;6514:34;;;3297:10:1::1;:21;::::0;::::1;::::0;6427:18:76;;3297:46:1::1;;;;;;;;;;;;;;;;;::::0;::::1;1831:101:43::0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4063:335:20:-;4147:17;;4185:24;4147:17;4259:57;1057:2;1004;4259:16;;:57;:::i;:::-;4248:86;;;;;;;:::i;:::-;4221:113;;-1:-1:-1;4221:113:20;-1:-1:-1;4356:35:20;:16;1057:2;4356:16;;:35;:::i;:::-;4063:335;;;;-1:-1:-1;4344:47:20;-1:-1:-1;;;4063:335:20:o;1622:876::-;1733:7;2101:20:13;;;1990:12:20;;;;2034:15;;;;2101:20:13;2034:15:20;:::i;:::-;2024:26;;;;;;;:::i;:::-;;;;;;;;;2082:15;;;;:6;:15;:::i;:::-;2072:26;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;8458:32:76;;;1930:547:20;;;8440:51:76;8507:18;;8500:34;;;;8550:18;;;8543:34;2120:19:20;8593:18:76;;;8586:34;;;;2120:19:20;;;;2161:27;8636:19:76;;;8629:35;;;;2161:27:20;;;2210:25;8680:19:76;;;8673:35;;;;2210:25:20;;;2257:19;8724::76;;;8717:35;;;;2257:19:20;;;2298:27;8768:19:76;;;8761:35;;;;2298:27:20;;;8812:19:76;;;8805:35;2347:13:20;8856:19:76;;;8849:35;2390:4:20;8900:19:76;;;8893:62;9005:14;8992:28;;;8971:19;;;8964:57;9058:28;;9037:19;;;9030:57;8412:19;;1930:547:20;;;;;;;;;;;;1903:588;;;;;;1884:607;;;1622:876;;;;;:::o;1416:216:1:-;1554:24;:22;:24::i;:::-;1588:37;1596:4;1602:7;;1611:13;1588:7;:37::i;:::-;1416:216;;;;:::o;4068:83::-;1094:13:43;:11;:13::i;:::-;4120:10:1::1;-1:-1:-1::0;;;;;4120:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;4372:133:::0;1094:13:43;:11;:13::i;:::-;4457:41:1::1;::::0;-1:-1:-1;;;4457:41:1;;-1:-1:-1;;;;;939:32:76;;;4457:41:1::1;::::0;::::1;921:51:76::0;4457:10:1::1;:24;::::0;::::1;::::0;894:18:76;;4457:41:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4372:133:::0;:::o;3798:111::-;3867:35;;-1:-1:-1;;;3867:35:1;;3896:4;3867:35;;;921:51:76;3841:7:1;;3867:10;-1:-1:-1;;;;;3867:20:1;;;;894:18:76;;3867:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3860:42;;3798:111;:::o;2910:104::-;2954:53;;-1:-1:-1;;;2954:53:1;;3001:4;2954:53;;;921:51:76;2954:10:1;-1:-1:-1;;;;;2954:20:1;;;;2982:9;;894:18:76;;2954:53:1;;;;;;;;;;;;;;;;;;;2081:198:43;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:43;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:43;;9713:2:76;2161:73:43::1;::::0;::::1;9695:21:76::0;9752:2;9732:18;;;9725:30;9791:34;9771:18;;;9764:62;-1:-1:-1;;;9842:18:76;;;9835:36;9888:19;;2161:73:43::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;631:315:1:-;789:20;811:22;845:24;:22;:24::i;:::-;886:53;911:6;919:10;931:7;886:24;:53::i;:::-;879:60;;;;631:315;;;;;;;:::o;1359:130:43:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:43;719:10:61;1422:23:43;1414:68;;;;-1:-1:-1;;;1414:68:43;;10120:2:76;1414:68:43;;;10102:21:76;;;10139:18;;;10132:30;10198:34;10178:18;;;10171:62;10250:18;;1414:68:43;9918:356:76;2433:187:43;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:43;;;-1:-1:-1;;;;;;2541:17:43;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;4584:135:1:-;4653:10;-1:-1:-1;;;;;4675:10:1;4653:33;;4645:67;;;;-1:-1:-1;;;4645:67:1;;10481:2:76;4645:67:1;;;10463:21:76;10520:2;10500:18;;;10493:30;-1:-1:-1;;;10539:18:76;;;10532:51;10600:18;;4645:67:1;10279:345:76;2493:316:1;2779:23;;-1:-1:-1;;;2779:23:1;;10831:2:76;2779:23:1;;;10813:21:76;10870:2;10850:18;;;10843:30;-1:-1:-1;;;10889:18:76;;;10882:43;10942:18;;2779:23:1;10629:337:76;2838:1219:20;2983:20;3005:22;;;3106:24;3005:22;3134:46;3156:23;;;;:6;:23;:::i;3134:46::-;3067:113;;-1:-1:-1;3067:113:20;;-1:-1:-1;3067:113:20;-1:-1:-1;3067:113:20;-1:-1:-1;3421:2:20;3401:22;;;:48;;-1:-1:-1;3447:2:20;3427:22;;3401:48;3393:125;;;;;-1:-1:-1;;;3393:125:20;;11173:2:76;3393:125:20;;;11155:21:76;11192:18;;;11185:30;;;;11251:34;11231:18;;;11224:62;11322:34;11302:18;;;11295:62;11374:19;;3393:125:20;10971:428:76;3393:125:20;3528:12;3543:69;3572:39;3580:6;3588:10;3600;3572:7;:39::i;:::-;7455:58:65;;11646:66:76;7455:58:65;;;11634:79:76;11729:12;;;11722:28;;;7325:7:65;;11766:12:76;;7455:58:65;;;;;;;;;;;;7445:69;;;;;;7438:76;;7256:265;;;;3543:69:20;3528:84;;3720:30;3734:4;3740:9;;3720:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3720:13:20;;-1:-1:-1;;;3720:30:20:i;:::-;-1:-1:-1;;;;;3701:49:20;:15;-1:-1:-1;;;;;3701:49:20;;3697:139;;3777:47;3797:4;3802:10;3813;3777:19;:47::i;:::-;3766:59;;;;;;;;;;;;;;;;;;;;;;;;3697:139;4001:48;4021:5;4027:10;4038;4001:19;:48::i;:::-;3990:60;;;;;;;;;-1:-1:-1;3990:60:20;;;;;-1:-1:-1;2838:1219:20;-1:-1:-1;;;;;;;;;2838:1219:20:o;3661:227:65:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:65;3661:227;-1:-1:-1;;;3661:227:65:o;3200:248:3:-;3311:7;3435:8;3419:10;3411:19;;:33;;3395:3;3380:10;3372:19;;:26;;3342:9;:17;;3358:1;3342:17;;;3354:1;3342:17;3341:58;;;:104;;3200:248;-1:-1:-1;;;;3200:248:3:o;2145:730:65:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:65;;-1:-1:-1;2822:35:65;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:65;;12123:2:76;788:34:65;;;12105:21:76;12162:2;12142:18;;;12135:30;12201:26;12181:18;;;12174:54;12245:18;;788:34:65;11921:348:76;730:345:65;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:65;;12476:2:76;903:41:65;;;12458:21:76;12515:2;12495:18;;;12488:30;12554:33;12534:18;;;12527:61;12605:18;;903:41:65;12274:355:76;839:236:65;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:65;;12836:2:76;1020:44:65;;;12818:21:76;12875:2;12855:18;;;12848:30;12914:34;12894:18;;;12887:62;-1:-1:-1;;;12965:18:76;;;12958:32;13007:19;;1020:44:65;12634:398:76;5069:1494:65;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:65;;-1:-1:-1;6221:30:65;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;13264:25:76;;;13337:4;13325:17;;13305:18;;;13298:45;;;;13359:18;;;13352:34;;;13402:18;;;13395:34;;;6374:24:65;;13236:19:76;;6374:24:65;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:65;;-1:-1:-1;;6374:24:65;;;-1:-1:-1;;;;;;;6412:20:65;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:65;;-1:-1:-1;5069:1494:65;;;;;;;;:::o;14:276:76:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:76:o;295:139::-;-1:-1:-1;;;;;378:31:76;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:76:o;983:347::-;1034:8;1044:6;1098:3;1091:4;1083:6;1079:17;1075:27;1065:55;;1116:1;1113;1106:12;1065:55;-1:-1:-1;1139:20:76;;1182:18;1171:30;;1168:50;;;1214:1;1211;1204:12;1168:50;1251:4;1243:6;1239:17;1227:29;;1303:3;1296:4;1287:6;1279;1275:19;1271:30;1268:39;1265:59;;;1320:1;1317;1310:12;1335:409;1405:6;1413;1466:2;1454:9;1445:7;1441:23;1437:32;1434:52;;;1482:1;1479;1472:12;1434:52;1522:9;1509:23;1555:18;1547:6;1544:30;1541:50;;;1587:1;1584;1577:12;1541:50;1626:58;1676:7;1667:6;1656:9;1652:22;1626:58;:::i;:::-;1703:8;;1600:84;;-1:-1:-1;1335:409:76;-1:-1:-1;;;;1335:409:76:o;1749:580::-;1921:4;1950:14;2003:2;1995:6;1991:15;1980:9;1973:34;2055:2;2047:6;2043:15;2038:2;2027:9;2023:18;2016:43;;2095:2;2090;2079:9;2075:18;2068:30;2134:6;2129:2;2118:9;2114:18;2107:34;2192:6;2184;2178:3;2167:9;2163:19;2150:49;2249:1;2243:3;2234:6;2223:9;2219:22;2215:32;2208:43;2319:3;2312:2;2308:7;2303:2;2295:6;2291:15;2287:29;2276:9;2272:45;2268:55;2260:63;;1749:580;;;;;;;:::o;2334:162::-;2400:5;2445:3;2436:6;2431:3;2427:16;2423:26;2420:46;;;2462:1;2459;2452:12;2420:46;-1:-1:-1;2484:6:76;2334:162;-1:-1:-1;2334:162:76:o;2501:167::-;2568:20;;2628:14;2617:26;;2607:37;;2597:65;;2658:1;2655;2648:12;2597:65;2501:167;;;:::o;2673:512::-;2781:6;2789;2797;2850:2;2838:9;2829:7;2825:23;2821:32;2818:52;;;2866:1;2863;2856:12;2818:52;2906:9;2893:23;2939:18;2931:6;2928:30;2925:50;;;2971:1;2968;2961:12;2925:50;2994:73;3059:7;3050:6;3039:9;3035:22;2994:73;:::i;:::-;2984:83;;;3086:37;3119:2;3108:9;3104:18;3086:37;:::i;:::-;3076:47;;3142:37;3175:2;3164:9;3160:18;3142:37;:::i;:::-;3132:47;;2673:512;;;;;:::o;3372:636::-;3475:6;3483;3491;3499;3552:2;3540:9;3531:7;3527:23;3523:32;3520:52;;;3568:1;3565;3558:12;3520:52;3607:9;3594:23;3646:1;3639:5;3636:12;3626:40;;3662:1;3659;3652:12;3626:40;3685:5;-1:-1:-1;3741:2:76;3726:18;;3713:32;3768:18;3757:30;;3754:50;;;3800:1;3797;3790:12;3754:50;3839:58;3889:7;3880:6;3869:9;3865:22;3839:58;:::i;:::-;3372:636;;3916:8;;-1:-1:-1;3813:84:76;;3998:2;3983:18;3970:32;;3372:636;-1:-1:-1;;;;3372:636:76:o;4241:263::-;4308:6;4361:2;4349:9;4340:7;4336:23;4332:32;4329:52;;;4377:1;4374;4367:12;4329:52;4416:9;4403:23;4435:39;4468:5;4435:39;:::i;4951:504::-;5061:6;5069;5077;5130:2;5118:9;5109:7;5105:23;5101:32;5098:52;;;5146:1;5143;5136:12;5098:52;5186:9;5173:23;5219:18;5211:6;5208:30;5205:50;;;5251:1;5248;5241:12;5205:50;5274:73;5339:7;5330:6;5319:9;5315:22;5274:73;:::i;:::-;5264:83;5394:2;5379:18;;5366:32;;-1:-1:-1;5445:2:76;5430:18;;;5417:32;;4951:504;-1:-1:-1;;;;4951:504:76:o;5460:602::-;5635:2;5624:9;5617:21;5598:4;5667:6;5661:13;5710:6;5705:2;5694:9;5690:18;5683:34;5735:1;5745:144;5759:6;5756:1;5753:13;5745:144;;;5872:4;5856:14;;;5852:25;;5846:32;5841:2;5822:17;;;5818:26;5811:68;5774:12;5745:144;;;5749:3;5938:1;5933:2;5924:6;5913:9;5909:22;5905:31;5898:42;6008:2;6001;5997:7;5992:2;5984:6;5980:15;5976:29;5965:9;5961:45;5957:54;5949:62;;;6049:6;6042:4;6031:9;6027:20;6020:36;5460:602;;;;;:::o;6559:331::-;6664:9;6675;6717:8;6705:10;6702:24;6699:44;;;6739:1;6736;6729:12;6699:44;6768:6;6758:8;6755:20;6752:40;;;6788:1;6785;6778:12;6752:40;-1:-1:-1;;6814:23:76;;;6859:25;;;;;-1:-1:-1;6559:331:76:o;6895:256::-;6961:6;6969;7022:2;7010:9;7001:7;6997:23;6993:32;6990:52;;;7038:1;7035;7028:12;6990:52;7061:28;7079:9;7061:28;:::i;:::-;7051:38;;7108:37;7141:2;7130:9;7126:18;7108:37;:::i;:::-;7098:47;;6895:256;;;;;:::o;7156:521::-;7233:4;7239:6;7299:11;7286:25;7393:2;7389:7;7378:8;7362:14;7358:29;7354:43;7334:18;7330:68;7320:96;;7412:1;7409;7402:12;7320:96;7439:33;;7491:20;;;-1:-1:-1;7534:18:76;7523:30;;7520:50;;;7566:1;7563;7556:12;7520:50;7599:4;7587:17;;-1:-1:-1;7630:14:76;7626:27;;;7616:38;;7613:58;;;7667:1;7664;7657:12;7682:271;7865:6;7857;7852:3;7839:33;7821:3;7891:16;;7916:13;;;7891:16;7682:271;-1:-1:-1;7682:271:76:o;9322:184::-;9392:6;9445:2;9433:9;9424:7;9420:23;9416:32;9413:52;;;9461:1;9458;9451:12;9413:52;-1:-1:-1;9484:16:76;;9322:184;-1:-1:-1;9322:184:76:o;11789:127::-;11850:10;11845:3;11841:20;11838:1;11831:31;11881:4;11878:1;11871:15;11905:4;11902:1;11895:15",
    "linkReferences": {},
    "immutableReferences": {
      "156": [
        {
          "start": 566,
          "length": 32
        },
        {
          "start": 794,
          "length": 32
        },
        {
          "start": 945,
          "length": 32
        },
        {
          "start": 1382,
          "length": 32
        },
        {
          "start": 1530,
          "length": 32
        },
        {
          "start": 1649,
          "length": 32
        },
        {
          "start": 1790,
          "length": 32
        },
        {
          "start": 2210,
          "length": 32
        }
      ],
      "5886": [
        {
          "start": 308,
          "length": 32
        },
        {
          "start": 2709,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": "94e1fc19",
    "owner()": "8da5cb5b",
    "parsePaymasterAndData(bytes)": "94d4ad60",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "verifyingSigner()": "23d9ac9b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"}],\"name\":\"parsePaymasterAndData\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)\":{\"notice\":\"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\", which will carry the signature itself.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"A sample paymaster that uses external service to decide whether to pay for the UserOp. The paymaster trusts an external signer to sign the transaction. The calling user must pass the UserOp to that external signer first, which performs whatever off-chain verification before signing the UserOp. Note that this signature is NOT a replacement for the account-specific signature: - the paymaster checks a signature to agree to PAY for GAS. - the account checks a signature to prove identity and account ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/VerifyingPaymaster.sol\":\"VerifyingPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x61860e811138a587a915c23c2651f2462e0a9bea24b2be4f6c54f93f42e8895b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69b7e5a6f3d71f6ed47f2804b9ff1213619a53a699c5d687bbc1d8d5d24413ac\",\"dweb:/ipfs/QmNoyB5b2EYuFUpnXKaN1PPvv9Q28E282qUAYmoj7hcsT5\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x81b70ea6183fd28e6c00dc3cf357c8453abdd4cc46ec628e7589e4b6a188d626\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f4a99aced25a842721a2495760af84b874c1f730c94f8b3e76c71c8b757c90f5\",\"dweb:/ipfs/QmacEJqVFbwQxE4HTzqvWWAFT7uSbH2Yd7EMqdCx1DxzBz\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xfc37d01c654f967c0f33b0edcb074231d30841f6fe1b23a070564f13c497b111\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://490630958f3a1861ad16db742e891b8c9f6f229a11f942d25ff58e9bab983c37\",\"dweb:/ipfs/QmYcvJxvXrXWvDUp6XZZirzjMqk5BaWdmsWWsEtamiuDu9\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x918f6cc1dcde7bef0ee7f1d6f5fd1f7093d19e953c1c3de4346019862ccd1a74\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b90dd26eb9e7e02fb71fc7558a6c1065a834d6e2371cdcd2329a59fb966ad0f\",\"dweb:/ipfs/QmXX2yFo6HWH3BSxtAz6qjdYSF5xtNEs5HDoeu3fPkdEBi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xe11c34981c582f5b481a9d5bd22c290df17ffc11777e604615077e66fd5a1da5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5d4c712e45e97d7714e99e9c9013e2853b42f262b41d68a9ce786b9dcc73a7ec\",\"dweb:/ipfs/QmfWbJib54gS1CGKKNdMGq5Fw94ZuByWgz9ZkaKSxWosEL\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x10cdaa14cd2b08279e02c2d4863cea18cfb7e11d7a33cf740755f9a025e7bda1\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://3d214ceee25812bb2a8176dd245a399d84d222cf7f9cf0bc3937afad372f0b7a\",\"dweb:/ipfs/QmZxqSic8cGeis7R7ufUjf95CgTpyAFY9nCHuiLPbESbYr\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xb9778d418650d05b798dd2f1302ffc598411908f80296bb6ff391d0017f2a8bb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d3923a80ad02e77ba413caef2d4f71c7494bf8a3fd5fda753075310dbb9fe4b4\",\"dweb:/ipfs/QmYieD4jEHcbvVrRQPZ5VBScDZfGdeZWbFvkxDhnezNXR1\"]},\"contracts/samples/VerifyingPaymaster.sol\":{\"keccak256\":\"0xde66a8446b2c9ab25d0a6b7fc30f4f00c8ea38b1e589015256041799dd53b35a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://09199ac4b96205a9f94c10c822db441a20b292a06fbb074d9a0d05ec7a96b632\",\"dweb:/ipfs/QmWtaxkqPRRAcaBaLUHYzwtYaJwSHbWhDW9qMo4ooJXj9h\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_verifyingSigner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parsePaymasterAndData",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyingSigner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- The unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- Actual gas used so far (without this postOp call).",
              "context": "- The context value returned by validatePaymasterUserOp",
              "mode": "- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "- The maximum cost of this transaction (based on maximum gas and gas price from userOp).",
              "userOp": "- The user operation.",
              "userOpHash": "- Hash of the user's request data."
            },
            "returns": {
              "context": "       - Value to send to a postOp. Zero length to signify postOp is not required.",
              "validationData": "- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \"authorizer\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "- The address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "- Amount to withdraw.",
              "withdrawAddress": "- Target to send to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "Add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "Add a deposit for this paymaster, used for paying for transaction fees."
          },
          "getDeposit()": {
            "notice": "Return current paymaster's deposit on the entryPoint."
          },
          "getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": {
            "notice": "return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\", which will carry the signature itself."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "Post-operation handler. Must verify sender is the entryPoint."
          },
          "unlockStake()": {
            "notice": "Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "Withdraw value from the deposit."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/samples/VerifyingPaymaster.sol": "VerifyingPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/core/BasePaymaster.sol": {
        "keccak256": "0x61860e811138a587a915c23c2651f2462e0a9bea24b2be4f6c54f93f42e8895b",
        "urls": [
          "bzz-raw://69b7e5a6f3d71f6ed47f2804b9ff1213619a53a699c5d687bbc1d8d5d24413ac",
          "dweb:/ipfs/QmNoyB5b2EYuFUpnXKaN1PPvv9Q28E282qUAYmoj7hcsT5"
        ],
        "license": "GPL-3.0"
      },
      "contracts/core/Helpers.sol": {
        "keccak256": "0x81b70ea6183fd28e6c00dc3cf357c8453abdd4cc46ec628e7589e4b6a188d626",
        "urls": [
          "bzz-raw://f4a99aced25a842721a2495760af84b874c1f730c94f8b3e76c71c8b757c90f5",
          "dweb:/ipfs/QmacEJqVFbwQxE4HTzqvWWAFT7uSbH2Yd7EMqdCx1DxzBz"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xfc37d01c654f967c0f33b0edcb074231d30841f6fe1b23a070564f13c497b111",
        "urls": [
          "bzz-raw://490630958f3a1861ad16db742e891b8c9f6f229a11f942d25ff58e9bab983c37",
          "dweb:/ipfs/QmYcvJxvXrXWvDUp6XZZirzjMqk5BaWdmsWWsEtamiuDu9"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x918f6cc1dcde7bef0ee7f1d6f5fd1f7093d19e953c1c3de4346019862ccd1a74",
        "urls": [
          "bzz-raw://5b90dd26eb9e7e02fb71fc7558a6c1065a834d6e2371cdcd2329a59fb966ad0f",
          "dweb:/ipfs/QmXX2yFo6HWH3BSxtAz6qjdYSF5xtNEs5HDoeu3fPkdEBi"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0xe11c34981c582f5b481a9d5bd22c290df17ffc11777e604615077e66fd5a1da5",
        "urls": [
          "bzz-raw://5d4c712e45e97d7714e99e9c9013e2853b42f262b41d68a9ce786b9dcc73a7ec",
          "dweb:/ipfs/QmfWbJib54gS1CGKKNdMGq5Fw94ZuByWgz9ZkaKSxWosEL"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0x10cdaa14cd2b08279e02c2d4863cea18cfb7e11d7a33cf740755f9a025e7bda1",
        "urls": [
          "bzz-raw://3d214ceee25812bb2a8176dd245a399d84d222cf7f9cf0bc3937afad372f0b7a",
          "dweb:/ipfs/QmZxqSic8cGeis7R7ufUjf95CgTpyAFY9nCHuiLPbESbYr"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/UserOperation.sol": {
        "keccak256": "0xb9778d418650d05b798dd2f1302ffc598411908f80296bb6ff391d0017f2a8bb",
        "urls": [
          "bzz-raw://d3923a80ad02e77ba413caef2d4f71c7494bf8a3fd5fda753075310dbb9fe4b4",
          "dweb:/ipfs/QmYieD4jEHcbvVrRQPZ5VBScDZfGdeZWbFvkxDhnezNXR1"
        ],
        "license": "GPL-3.0"
      },
      "contracts/samples/VerifyingPaymaster.sol": {
        "keccak256": "0xde66a8446b2c9ab25d0a6b7fc30f4f00c8ea38b1e589015256041799dd53b35a",
        "urls": [
          "bzz-raw://09199ac4b96205a9f94c10c822db441a20b292a06fbb074d9a0d05ec7a96b632",
          "dweb:/ipfs/QmWtaxkqPRRAcaBaLUHYzwtYaJwSHbWhDW9qMo4ooJXj9h"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/samples/VerifyingPaymaster.sol",
    "id": 6080,
    "exportedSymbols": {
      "BasePaymaster": [
        363
      ],
      "Context": [
        38666
      ],
      "ECDSA": [
        39343
      ],
      "IAggregator": [
        3506
      ],
      "IEntryPoint": [
        3708
      ],
      "INonceManager": [
        3727
      ],
      "IPaymaster": [
        3762
      ],
      "IStakeManager": [
        3865
      ],
      "Math": [
        40398
      ],
      "Ownable": [
        36462
      ],
      "Strings": [
        38982
      ],
      "UserOperation": [
        3892
      ],
      "UserOperationLib": [
        4067
      ],
      "ValidationData": [
        2660
      ],
      "VerifyingPaymaster": [
        6079
      ],
      "_intersectTimeRange": [
        2806
      ],
      "_packValidationData": [
        2843,
        2881
      ],
      "_parseValidationData": [
        2720
      ],
      "calldataKeccak": [
        2891
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4365:20",
    "nodes": [
      {
        "id": 5872,
        "nodeType": "PragmaDirective",
        "src": "36:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 5873,
        "nodeType": "ImportDirective",
        "src": "140:35:20",
        "nodes": [],
        "absolutePath": "contracts/core/BasePaymaster.sol",
        "file": "../core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6080,
        "sourceUnit": 364,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5874,
        "nodeType": "ImportDirective",
        "src": "176:62:20",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6080,
        "sourceUnit": 39344,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6079,
        "nodeType": "ContractDefinition",
        "src": "779:3621:20",
        "nodes": [
          {
            "id": 5880,
            "nodeType": "UsingForDirective",
            "src": "831:24:20",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5878,
              "name": "ECDSA",
              "nameLocations": [
                "837:5:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39343,
              "src": "837:5:20"
            },
            "typeName": {
              "id": 5879,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 5884,
            "nodeType": "UsingForDirective",
            "src": "860:41:20",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5881,
              "name": "UserOperationLib",
              "nameLocations": [
                "866:16:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4067,
              "src": "866:16:20"
            },
            "typeName": {
              "id": 5883,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5882,
                "name": "UserOperation",
                "nameLocations": [
                  "887:13:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3892,
                "src": "887:13:20"
              },
              "referencedDeclaration": 3892,
              "src": "887:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$3892_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 5886,
            "nodeType": "VariableDeclaration",
            "src": "907:40:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "23d9ac9b",
            "mutability": "immutable",
            "name": "verifyingSigner",
            "nameLocation": "932:15:20",
            "scope": 6079,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5885,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "907:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5889,
            "nodeType": "VariableDeclaration",
            "src": "954:52:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VALID_TIMESTAMP_OFFSET",
            "nameLocation": "979:22:20",
            "scope": 6079,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5887,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "954:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 5888,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1004:2:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "private"
          },
          {
            "id": 5892,
            "nodeType": "VariableDeclaration",
            "src": "1013:46:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SIGNATURE_OFFSET",
            "nameLocation": "1038:16:20",
            "scope": 6079,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5890,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1013:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3834",
              "id": 5891,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1057:2:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_84_by_1",
                "typeString": "int_const 84"
              },
              "value": "84"
            },
            "visibility": "private"
          },
          {
            "id": 5908,
            "nodeType": "FunctionDefinition",
            "src": "1066:141:20",
            "nodes": [],
            "body": {
              "id": 5907,
              "nodeType": "Block",
              "src": "1156:51:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5903,
                      "name": "verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5886,
                      "src": "1166:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5904,
                      "name": "_verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5897,
                      "src": "1184:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1166:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5906,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:34:20"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5900,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5895,
                    "src": "1143:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3708",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 5901,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5899,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "1129:13:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 363,
                  "src": "1129:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "1129:26:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5895,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "1090:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5908,
                  "src": "1078:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$3708",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 5894,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5893,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "1078:11:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3708,
                      "src": "1078:11:20"
                    },
                    "referencedDeclaration": 3708,
                    "src": "1078:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3708",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5897,
                  "mutability": "mutable",
                  "name": "_verifyingSigner",
                  "nameLocation": "1111:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5908,
                  "src": "1103:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:51:20"
            },
            "returnParameters": {
              "id": 5902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:20"
            },
            "scope": 6079,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5963,
            "nodeType": "FunctionDefinition",
            "src": "1622:876:20",
            "nodes": [],
            "body": {
              "id": 5962,
              "nodeType": "Block",
              "src": "1742:756:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5922,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1847:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5962,
                      "src": "1839:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5921,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1839:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5926,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5923,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5912,
                        "src": "1856:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      "id": 5924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1863:9:20",
                      "memberName": "getSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3915,
                      "src": "1856:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$3892_calldata_ptr_$returns$_t_address_$bound_to$_t_struct$_UserOperation_$3892_calldata_ptr_$",
                        "typeString": "function (struct UserOperation calldata) pure returns (address)"
                      }
                    },
                    "id": 5925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:18:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1839:35:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5930,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5922,
                            "src": "1962:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 5931,
                              "name": "userOp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5912,
                              "src": "1990:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                                "typeString": "struct UserOperation calldata"
                              }
                            },
                            "id": 5932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1997:5:20",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3873,
                            "src": "1990:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 5934,
                                  "name": "userOp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5912,
                                  "src": "2034:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                                    "typeString": "struct UserOperation calldata"
                                  }
                                },
                                "id": 5935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2041:8:20",
                                "memberName": "initCode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3875,
                                "src": "2034:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 5933,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2024:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 5936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2024:26:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 5938,
                                  "name": "userOp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5912,
                                  "src": "2082:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                                    "typeString": "struct UserOperation calldata"
                                  }
                                },
                                "id": 5939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2089:8:20",
                                "memberName": "callData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3877,
                                "src": "2082:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 5937,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2072:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 5940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2072:26:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 5941,
                              "name": "userOp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5912,
                              "src": "2120:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                                "typeString": "struct UserOperation calldata"
                              }
                            },
                            "id": 5942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2127:12:20",
                            "memberName": "callGasLimit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3879,
                            "src": "2120:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 5943,
                              "name": "userOp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5912,
                              "src": "2161:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                                "typeString": "struct UserOperation calldata"
                              }
                            },
                            "id": 5944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2168:20:20",
                            "memberName": "verificationGasLimit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3881,
                            "src": "2161:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 5945,
                              "name": "userOp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5912,
                              "src": "2210:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                                "typeString": "struct UserOperation calldata"
                              }
                            },
                            "id": 5946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2217:18:20",
                            "memberName": "preVerificationGas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3883,
                            "src": "2210:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 5947,
                              "name": "userOp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5912,
                              "src": "2257:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                                "typeString": "struct UserOperation calldata"
                              }
                            },
                            "id": 5948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2264:12:20",
                            "memberName": "maxFeePerGas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3885,
                            "src": "2257:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 5949,
                              "name": "userOp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5912,
                              "src": "2298:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                                "typeString": "struct UserOperation calldata"
                              }
                            },
                            "id": 5950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2305:20:20",
                            "memberName": "maxPriorityFeePerGas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3887,
                            "src": "2298:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 5951,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2347:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 5952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2353:7:20",
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "2347:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 5955,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2390:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VerifyingPaymaster_$6079",
                                  "typeString": "contract VerifyingPaymaster"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VerifyingPaymaster_$6079",
                                  "typeString": "contract VerifyingPaymaster"
                                }
                              ],
                              "id": 5954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2382:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5953,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2382:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2382:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5957,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5914,
                            "src": "2417:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 5958,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5916,
                            "src": "2449:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "expression": {
                            "id": 5928,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1930:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1934:6:20",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1930:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1930:547:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5927,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1903:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1903:588:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5920,
                  "id": 5961,
                  "nodeType": "Return",
                  "src": "1884:607:20"
                }
              ]
            },
            "documentation": {
              "id": 5909,
              "nodeType": "StructuredDocumentation",
              "src": "1214:403:20",
              "text": " return the hash we're going to sign off-chain (and validate on-chain)\n this method is called by the off-chain service, to sign the request.\n it is called on-chain from the validatePaymasterUserOp, to validate the signature.\n note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\n which will carry the signature itself."
            },
            "functionSelector": "94e1fc19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHash",
            "nameLocation": "1631:7:20",
            "parameters": {
              "id": 5917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5912,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1662:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5963,
                  "src": "1639:29:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 5911,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5910,
                      "name": "UserOperation",
                      "nameLocations": [
                        "1639:13:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3892,
                      "src": "1639:13:20"
                    },
                    "referencedDeclaration": 3892,
                    "src": "1639:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3892_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5914,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "1677:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5963,
                  "src": "1670:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 5913,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5916,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "1696:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5963,
                  "src": "1689:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 5915,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1638:69:20"
            },
            "returnParameters": {
              "id": 5920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5919,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5963,
                  "src": "1733:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5918,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1732:9:20"
            },
            "scope": 6079,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6043,
            "nodeType": "FunctionDefinition",
            "src": "2838:1219:20",
            "nodes": [],
            "body": {
              "id": 6042,
              "nodeType": "Block",
              "src": "3029:1028:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 5979,
                        "name": "requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5971,
                        "src": "3040:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 5980,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3039:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5981,
                  "nodeType": "ExpressionStatement",
                  "src": "3039:17:20"
                },
                {
                  "assignments": [
                    5983,
                    5985,
                    5987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5983,
                      "mutability": "mutable",
                      "name": "validUntil",
                      "nameLocation": "3075:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6042,
                      "src": "3068:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 5982,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "3068:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5985,
                      "mutability": "mutable",
                      "name": "validAfter",
                      "nameLocation": "3094:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6042,
                      "src": "3087:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 5984,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "3087:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5987,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "3121:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6042,
                      "src": "3106:24:20",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5986,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3106:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5992,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5989,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5967,
                          "src": "3156:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 5990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3163:16:20",
                        "memberName": "paymasterAndData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3889,
                        "src": "3156:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 5988,
                      "name": "parsePaymasterAndData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6078,
                      "src": "3134:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$",
                        "typeString": "function (bytes calldata) pure returns (uint48,uint48,bytes calldata)"
                      }
                    },
                    "id": 5991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:46:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$",
                      "typeString": "tuple(uint48,uint48,bytes calldata)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3067:113:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5994,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5987,
                              "src": "3401:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 5995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3411:6:20",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3401:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3634",
                            "id": 5996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3421:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "value": "64"
                          },
                          "src": "3401:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5998,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5987,
                              "src": "3427:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 5999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3437:6:20",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3427:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 6000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3447:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "3427:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3401:48:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566572696679696e675061796d61737465723a20696e76616c6964207369676e6174757265206c656e67746820696e207061796d6173746572416e6444617461",
                        "id": 6003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3451:66:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
                          "typeString": "literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""
                        },
                        "value": "VerifyingPaymaster: invalid signature length in paymasterAndData"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
                          "typeString": "literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""
                        }
                      ],
                      "id": 5993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3393:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3393:125:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6005,
                  "nodeType": "ExpressionStatement",
                  "src": "3393:125:20"
                },
                {
                  "assignments": [
                    6007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6007,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "3536:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6042,
                      "src": "3528:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6006,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3528:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6016,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6011,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5967,
                            "src": "3580:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          {
                            "id": 6012,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5983,
                            "src": "3588:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 6013,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5985,
                            "src": "3600:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "id": 6010,
                          "name": "getHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5963,
                          "src": "3572:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_UserOperation_$3892_calldata_ptr_$_t_uint48_$_t_uint48_$returns$_t_bytes32_$",
                            "typeString": "function (struct UserOperation calldata,uint48,uint48) view returns (bytes32)"
                          }
                        },
                        "id": 6014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3572:39:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 6008,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39343,
                        "src": "3543:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$39343_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 6009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3549:22:20",
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39300,
                      "src": "3543:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 6015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3543:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3528:84:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6017,
                      "name": "verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5886,
                      "src": "3701:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 6020,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6007,
                          "src": "3734:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 6021,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5987,
                          "src": "3740:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 6018,
                          "name": "ECDSA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39343,
                          "src": "3720:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ECDSA_$39343_$",
                            "typeString": "type(library ECDSA)"
                          }
                        },
                        "id": 6019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3726:7:20",
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39109,
                        "src": "3720:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 6022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3720:30:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3701:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6033,
                  "nodeType": "IfStatement",
                  "src": "3697:139:20",
                  "trueBody": {
                    "id": 6032,
                    "nodeType": "Block",
                    "src": "3752:84:20",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 6024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3774:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "74727565",
                                  "id": 6026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3797:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 6027,
                                  "name": "validUntil",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5983,
                                  "src": "3802:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                {
                                  "id": 6028,
                                  "name": "validAfter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5985,
                                  "src": "3813:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                ],
                                "id": 6025,
                                "name": "_packValidationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2843,
                                  2881
                                ],
                                "referencedDeclaration": 2881,
                                "src": "3777:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
                                  "typeString": "function (bool,uint48,uint48) pure returns (uint256)"
                                }
                              },
                              "id": 6029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3777:47:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 6030,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3773:52:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$",
                            "typeString": "tuple(literal_string \"\",uint256)"
                          }
                        },
                        "functionReturnParameters": 5978,
                        "id": 6031,
                        "nodeType": "Return",
                        "src": "3766:59:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 6034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3998:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 6036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4021:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 6037,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5983,
                            "src": "4027:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 6038,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5985,
                            "src": "4038:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "id": 6035,
                          "name": "_packValidationData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2843,
                            2881
                          ],
                          "referencedDeclaration": 2881,
                          "src": "4001:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
                            "typeString": "function (bool,uint48,uint48) pure returns (uint256)"
                          }
                        },
                        "id": 6039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4001:48:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 6040,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3997:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$",
                      "typeString": "tuple(literal_string \"\",uint256)"
                    }
                  },
                  "functionReturnParameters": 5978,
                  "id": 6041,
                  "nodeType": "Return",
                  "src": "3990:60:20"
                }
              ]
            },
            "baseFunctions": [
              208
            ],
            "documentation": {
              "id": 5964,
              "nodeType": "StructuredDocumentation",
              "src": "2504:329:20",
              "text": " verify our external signer signed this request.\n the \"paymasterAndData\" is expected to be the paymaster and a signature over the entire request params\n paymasterAndData[:20] : address(this)\n paymasterAndData[20:84] : abi.encode(validUntil, validAfter)\n paymasterAndData[84:] : signature"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validatePaymasterUserOp",
            "nameLocation": "2847:24:20",
            "overrides": {
              "id": 5973,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2965:8:20"
            },
            "parameters": {
              "id": 5972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5967,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "2895:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6043,
                  "src": "2872:29:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3892_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 5966,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5965,
                      "name": "UserOperation",
                      "nameLocations": [
                        "2872:13:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3892,
                      "src": "2872:13:20"
                    },
                    "referencedDeclaration": 3892,
                    "src": "2872:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3892_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5969,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6043,
                  "src": "2903:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5968,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5971,
                  "mutability": "mutable",
                  "name": "requiredPreFund",
                  "nameLocation": "2935:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6043,
                  "src": "2927:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2871:80:20"
            },
            "returnParameters": {
              "id": 5978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5975,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "2996:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6043,
                  "src": "2983:20:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5974,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2983:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5977,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "3013:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6043,
                  "src": "3005:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2982:46:20"
            },
            "scope": 6079,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6078,
            "nodeType": "FunctionDefinition",
            "src": "4063:335:20",
            "nodes": [],
            "body": {
              "id": 6077,
              "nodeType": "Block",
              "src": "4211:187:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 6054,
                          "name": "validUntil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6048,
                          "src": "4222:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        {
                          "id": 6055,
                          "name": "validAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6050,
                          "src": "4234:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "id": 6056,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4221:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$",
                        "typeString": "tuple(uint48,uint48)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 6059,
                            "name": "paymasterAndData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6045,
                            "src": "4259:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "id": 6061,
                            "name": "SIGNATURE_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5892,
                            "src": "4299:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "4259:57:20",
                          "startExpression": {
                            "id": 6060,
                            "name": "VALID_TIMESTAMP_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5889,
                            "src": "4276:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 6064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4318:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 6063,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "4318:6:20",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 6066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4326:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 6065,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "4326:6:20",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 6067,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4317:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$",
                            "typeString": "tuple(type(uint48),type(uint48))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$",
                            "typeString": "tuple(type(uint48),type(uint48))"
                          }
                        ],
                        "expression": {
                          "id": 6057,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "4248:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 6058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4252:6:20",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "4248:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4248:86:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$",
                        "typeString": "tuple(uint48,uint48)"
                      }
                    },
                    "src": "4221:113:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6070,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:113:20"
                },
                {
                  "expression": {
                    "id": 6075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6071,
                      "name": "signature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6052,
                      "src": "4344:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 6072,
                        "name": "paymasterAndData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6045,
                        "src": "4356:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 6074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexRangeAccess",
                      "src": "4356:35:20",
                      "startExpression": {
                        "id": 6073,
                        "name": "SIGNATURE_OFFSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5892,
                        "src": "4373:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr_slice",
                        "typeString": "bytes calldata slice"
                      }
                    },
                    "src": "4344:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 6076,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:47:20"
                }
              ]
            },
            "functionSelector": "94d4ad60",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parsePaymasterAndData",
            "nameLocation": "4072:21:20",
            "parameters": {
              "id": 6046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6045,
                  "mutability": "mutable",
                  "name": "paymasterAndData",
                  "nameLocation": "4109:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6078,
                  "src": "4094:31:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6044,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4094:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4093:33:20"
            },
            "returnParameters": {
              "id": 6053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6048,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "4154:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6078,
                  "src": "4147:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 6047,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4147:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6050,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "4173:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6078,
                  "src": "4166:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 6049,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4166:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6052,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "4200:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6078,
                  "src": "4185:24:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6051,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4185:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4146:64:20"
            },
            "scope": 6079,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5876,
              "name": "BasePaymaster",
              "nameLocations": [
                "810:13:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 363,
              "src": "810:13:20"
            },
            "id": 5877,
            "nodeType": "InheritanceSpecifier",
            "src": "810:13:20"
          }
        ],
        "canonicalName": "VerifyingPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5875,
          "nodeType": "StructuredDocumentation",
          "src": "239:539:20",
          "text": " A sample paymaster that uses external service to decide whether to pay for the UserOp.\n The paymaster trusts an external signer to sign the transaction.\n The calling user must pass the UserOp to that external signer first, which performs\n whatever off-chain verification before signing the UserOp.\n Note that this signature is NOT a replacement for the account-specific signature:\n - the paymaster checks a signature to agree to PAY for GAS.\n - the account checks a signature to prove identity and account ownership."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6079,
          363,
          36462,
          38666,
          3762
        ],
        "name": "VerifyingPaymaster",
        "nameLocation": "788:18:20",
        "scope": 6080,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 20
}